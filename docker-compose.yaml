services:
  app:
    build: .
    restart: on-failure
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    ports:
      - '8000:8000'
    links:
      - redis
    volumes:
      - ${MEDIA_PATH}:${MEDIA_PATH}
    networks:
      - app-network
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - '5432:5432'
    networks:
      - app-network
    volumes:
      - /var/bgram_postgresql:/var/bgram_postgresql
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    expose:
      - '6379'
    networks:
      - app-network
    volumes:
      - /var/bgram_redis:/var/bgram_redis
  celery-worker:
    build: .
    command: celery -A core.celery.celery_app:bgram_celery_app worker -l info
    depends_on:
      - app
      - redis
    env_file:
      - ./.env
    links:
      - redis
    volumes:
      - ${MEDIA_PATH}:${MEDIA_PATH}
    networks:
      - app-network
  celery-beat:
    build: .
    command: celery -A core.celery.celery_app:bgram_celery_app beat -l info
    depends_on:
      - celery-worker
    env_file:
      - ./.env
    links:
      - redis
    networks:
      - app-network

networks:
  app-network:
volumes:
  app:
    driver: local
  redis:
    driver: local
  db:
    driver: local